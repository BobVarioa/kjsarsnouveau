buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'com.bobvarioa'
version = '1.2'

java {
    archivesBaseName = 'kubejsarsnoveau'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'official', version: "$minecraft_version"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'kubejsarsnoveau'

            mods {
                kubejsarsnoveau {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'kubejsarsnoveau'

            mods {
                kubejsarsnoveau {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'kubejsarsnoveau'

            mods {
                kubejsarsnoveau {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'kubejsarsnoveau', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                kubejsarsnoveau {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "kubejsarsnoveau.refmap.json"

    config "kubejsarsnoveau.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://maven.blamejared.com'
        content {
            includeGroup "com.hollingsworth.ars_nouveau"
        }
    }

    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }

    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }

    maven {
        url = "https://maven.fabricmc.net/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"

    implementation fg.deobf("dev.architectury:architectury-forge:$architectury_version")

    // KubeJS
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:$kubejs_version")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:$rhino_version")

    // Ars Nouveau
    implementation fg.deobf("com.hollingsworth.ars_nouveau:ars_nouveau-$minecraft_version:$arsnouveau_version")
    implementation fg.deobf("curse.maven:patchouli-306770:4031402")
    implementation fg.deobf("curse.maven:curios-309927:4398040")

    runtimeOnly fg.deobf("curse.maven:jei-238222:4615177")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "kubejsarsnoveau",
                "Specification-Vendor"    : "BobVarioa",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "BobVarioa",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
